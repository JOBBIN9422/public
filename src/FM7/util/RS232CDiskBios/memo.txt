動作確認 []は確認した機種 (なおコマンド例の"2"というのはポート番号なので環境に応じて書き換える)
  F-BASIC 3.0 [実機AV40]
    起動確認。
    なお、F-BASIC 3.0のディスクでうまく動作しないものは、オプションに、
        -install2 7F25
    をつけてやるとDisk BASICのエラーメッセージ領域に常駐するので動作するかもしれない。
    エラーが出るとクラッシュするかもしれない。

    F-BASICから起動確認したのは、
      FM-7 DEMO1 [実機AV40]
      FM-7 DEMO2 [実機AV40]
      Emergency [実機AV40]

  URADOS [実機AV40]
    起動確認。ただし$7F9Fまでしか使えない。なお、インストールアドレスを指定しなかったらサーバー
    はURADOSを自動判別してインストールアドレスを7F80に変更する。URADOSはFC00〜を使ってしまうの
    でデフォルトの位置にはインストールできない。

  R-DOS
    DOSモードで起動してくるものなので、サーバーオプション -dosmode が必要。DOSモードというのは、
    単に$8000〜$FBFFがRAMモードで、IPLが$0300からにロードされるというものなので、インストーラ
    がそのような状態にしてIPLにジャンプすることで対応。

  (非公式対応)Thexder [実機AV40]
    FC00〜FCFFはThexderが使うので、インストール先を変更する必要あり。
    例:
      RS232CDiskBios thexder.d77 2 -install 0040

  (非公式対応)MAGUS [実機AV40]
    FC00〜FCFFはMAGUSがスタックとして使うのでインストール先を変更する必要あり。
    例:
      RS232CDiskBios magus.d77 2 -install 0040

  (非公式対応)A列車で行こう [実機AV40]
    起動中にメインCPUのRAMをほぼ全域使ってしまうので、Disk BAISCのエラーメッセージ領域をつぶして
    BIOSフックをインストールしなくてはならないが、IPLがDisk BASICを読み込み中はBIOSフックは別の
    場所に無いと起動しないので、IPL中とIPL後で別のアドレスにBIOSフックをインストールすることで
    起動できる。
    例:
      RS232CDiskBios magus.d77 2 -install2 7F25

  (非公式対応)大戦略FM [実機AV40]
    普通にそのまま起動した。パラメータ不要。



失敗
  F-BASIC 3.3
    起動まではするのだが、その後RS232Cじゃなくて普通にディスクドライブを読みに行ってしまう。
    MMRを使いまくっているようでFC00〜に常駐だと無理。またF-BASICに制御を移す移し方も違って
    いるようで、Carry=0でJMP [$FBFE]としているから、初期化後にBIOSフックを再インストールで
    きなさそう。しかも4000と2000と6000と3か所にインストーラをコピーしているのにすべて消滅
    してた。




技術情報

FM-7のBIOSはフロッピーディスクアクセスのために、RESTORE($08),  DWRITE($09), DREAD($0A)の三種類の機能を提供する。F-BASIC 3.0はすべてこの機能を使ってディスクにアクセスする。この3種類の機能をリダイレクトして代わりにRS232C経由でサーバー間でデータの読み書きするように書き換えてやれば、物理的なディスクがなくてもディスクイメージから実機でディスク版プログラムを起動・実行することができる。F-BASICを使わない市販品のプログラムであっても、BIOSを使っているものであればある程度対応できる。

ただし、リダイレクトプログラムをFM-7のメモリに常駐させたとしても、ディスク上のプログラムが直接BIOSを呼んでしまったのでは意味がないので、セクタデータを送り込むサーバー側はBIOSコールしていると思われる部分を見つけるとリダイレクトプログラムを呼ぶように書き換えてから送信する必要がある。なお、サーバーがバイナリを書き換えて送信するので、LOADMして同じものをSAVEMしてしまうと、このリダイレクタが同じアドレスに常駐しているときしか実行できないプログラムに変化してしまう可能性があるのでそれはしない方がいい。

具体的には、以下のインストラクションを探して変更する。

	JSR		[$FBFA]
	JMP		[$FBFA]
	JSR		$F17D
	JMP		$F17D

また、BIOSが内部で使っているRESTORE, DWRITE, DREADのアドレスも公開されているので、以下のインストラクションも変更する必要がある。

	JSR		$FE02
	JMP		$FE02
	JSR		$FE05
	JMP		$FE05
	JSR		$FE08
	JMP		$FE08

LBSR $FExx、LBxx $FExxとしてコールしている場合、そのセクタがメモリ上のどこに読み込まれるのかわからないと変更することができない。URADOSが LBEQ $FE08 を使っていたが、これはURADOSであることを判定して適当に書き換えることで対応している。また、IPLセクタ(Track 0, Side 0, Sector 1)であれば$0100から読み込まれると仮定するとFExxへの差分が計算できるので、これも対応している。

また、プログラムの中には、

	LDY		#$FE08
	JSR		,Y

として呼び出しているものがある。ほとんどの場合はLDY #$FE0x, LDX #$FE0x, LDU #$FE0x (x=02,05,08)をすべて書き換えてしまっても良いが、念のためこの書きかえはサーバーの起動時のオプションでオン・オフを可能にしている。

また、F-BASICは、次のベクター

00DE	7EF17D		JMP		$F17D

を経由してBIOSを呼ぶので、[$00DF,$00E0]の値もリダイレクト先に変更する。これは、リダイレクタのインストーラから実行する。


もうひとつ問題は、F-BASICの初期化がせっかくインストールしたリダイレクタをクリアしてしまう点。だからF-BASICを起動するときは、最初のIPLとDisk BASIC読み込みのためにリダイレクタをインストールして、その後もう一度F-BASICの初期化後にリダイレクタをインストールする必要がある。これは、サーバーがIPLセクタを送信するときDisk BASICの初期化のコールバックアドレスを変更することで実現できる。F-BASICのIPLは、Disk BASICを読み込み後

   0170 8E 6E 00       LDX   #$6E00
   0173 43             COMA
   0174 6E 9F FB FE    JMP   [$FBFE]

このように、XにDisk BASIC初期化ルーチンのコールバックアドレスをセット、Carry Flagを1にセットしてベクター[$FBFE]にジャンプする。F-BASICはその後基本的な初期化の後、コールバックアドレスにジャンプする。このとき、コールバックアドレス以前のコンベンショナルメモリは初期化されてしまう。インストーラが$00DFにリダイレクタアドレスを書いていたとしてもF-BASICの初期化でリセットされてしまう。

そこで、サーバーはF-BASICのIPLを識別して (LDX #$6E00とJMP [$FBFE]の存在で確認)、LDX #$6E00をリダイレクタインストーラのアドレスに書き換える。当然インストーラは最初のインストール時はTrack 0 Side 0 Sector 1を読み込んでスタックを適当な位置にセットして$0100にジャンプすれば良かったが、2度目のインストールでは$0100にジャンプするとリセット無限ループになってしまう。これを防止するために、リダイレクタのインストーラは最初のインストール時に自身を書き換えて、2度目のインストール後は、Disk BASICの初期化のコールバックにジャンプするように仕掛ける。また、URADOSなども同じ枠組みを使っているが、URADOSの初期化は$4D00、リダイレクタのインストーラは原則$6000で、IPLの最後にLDX #$6000とするとF-BASICの初期化中にURADOSの初期化コードが消えてしまうので、これを防止するために、リダイレクタのインストーラは最初のインストール時に自身を$2000〜と$4000〜にコピーしておく。コピー先もサーバーから指定してもよかったけど2か所もあれば多分十分。


これによりDisk BASIC、URADOSの起動は可能になった。次の問題はリダイレクタの常駐アドレス。デフォルトでは$FC00〜$FC59に常駐するが、プログラムによってはこの領域を使ってしまう。実行したいプログラムが使う領域を避けるため、リダイレクタは好きな場所にインストールできるようになっている。Disk BASICのプログラムなどでは、エラーが出ない限りエラーメッセージは必要ないので、$7F25〜に常駐させる方法で、事実上普通のDisk BASICと同じだけもメモリを利用することができる。

しかし、$7F25に常駐させると、Disk BASICのIPLがDisk BASIC本体を読み込み途中にリダイレクタが破壊されてしまう。悪いことにリダイレクタ実行中に破壊されてしまうのでこれでは復活の余地がない。そこで、リダイレクタのインストーラは初回インストール先と二度目インストール先を変更できるようにした。サーバーがインストーラを送り込むとき初回インストール先と二度目インストール先を書き換えて送ることで対応している。二度目のインストール先は -install2 7F25 のようにオプションで指定できる。





$6000から(デフォルト)にロード。実行すると、
(1) BIOSのオーバーライドをインストール
(2) RS232Cからトラック0サイド0セクタ1をRS232Cから$0100からに読み込み
(3) ブート後の再インストールに備えて自身の NOP NOP を PULS A,B,X,Y,U,CC,DP,PC に書き換え。
(4) ブート後の再インストールに備えて自信を 0x2000-0x20FF, 0x4000-0x40FF にコピーする。(URADOSで0x2000のクローンを使用)
(5) $0100にジャンプ

Disk BASICが起動するとオーバーライドなどすべてクリアしてしまうので、再度インストールする必要がある。

Disk BASICのIPLは

   0170 8E 6E 00       LDX   #$6E00
   0173 43             COMA
   0174 6E 9F FB FE    JMP   [$FBFE]

これでF-BASIC ROMの初期化ルーチンに飛ぶ。この中で 0〜6DFF をクリアして 6E00 にジャンプする。これをサーバー側で、LDX #$6E00とJMP [$FBFE]の存在をチェックして、両方とも含む場合は、LDX #$6D00に書き換える。これにより、Disk BASIC起動時に再度BIOSオーバーライドをインストールする。



URADOSの場合 変更点3か所
  デフォルトインストールアドレスは7F80にする (FC00〜はURADOSが使用)
  インストーラのJMP $6E00をJMP $4D00にする (URADOSの初期化は$4D00〜)
  IPLはLDX #$4D00をLDX #$2000にする
  セクタ内容の変更で LBEQ $FE08, JMP $FE05 をそれぞれ LBEQ FE08_Hook, JMP FE05_Hook にする(自動)

これによりURADOSも起動可能。ただし使用可能なコンベンショナル領域は0x7F7Fまで。(URADOSネイティブは 0x7FFF)。またURADOSのLOAD "COM0:"もRS232Cはフックが使ってしまうから使えない。

